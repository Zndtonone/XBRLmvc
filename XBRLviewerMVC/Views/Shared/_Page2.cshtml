@{
    @model List<XBRLviewerMVC.Models.FactModel>
}

<!-- Identification of approved annual report -->
@{
    XBRLviewerMVC.Models.FactModel identificationOfApprovedAnnualReport = new XBRLviewerMVC.Models.FactModel();
    identificationOfApprovedAnnualReport = Model.FirstOrDefault(x => x.Id == "IdentificationOfApprovedAnnualReport");
    <p class="text-left p-1" data-toggle="tooltip" title="Identification of approved annual report">@identificationOfApprovedAnnualReport.Value</p>
}

<!-- Confirmation that annual report is presented in accordance with requirements provided for by legislation, any standards and requirements provided by articles of association or by agreement -->
@{
    XBRLviewerMVC.Models.FactModel confirmationThatAnnualReportIsPresentedInAccordanceWithRequirementsProvidedForByLegislationAnyStandardsAndRequirementsProvidedByArticlesOfAssociationOrByAgreement = new XBRLviewerMVC.Models.FactModel();
    confirmationThatAnnualReportIsPresentedInAccordanceWithRequirementsProvidedForByLegislationAnyStandardsAndRequirementsProvidedByArticlesOfAssociationOrByAgreement = Model.FirstOrDefault(x => x.Id == "ConfirmationThatAnnualReportIsPresentedInAccordanceWithRequirementsProvidedForByLegislationAnyStandardsAndRequirementsProvidedByArticlesOfAssociationOrByAgreement");
    <p class="text-left p-1" data-toggle="tooltip" title="Confirmation that annual report is presented in accordance with requirements provided for by legislation, any standards and requirements provided by articles of association or by agreement">@confirmationThatAnnualReportIsPresentedInAccordanceWithRequirementsProvidedForByLegislationAnyStandardsAndRequirementsProvidedByArticlesOfAssociationOrByAgreement.Value</p>
}

<!-- Confirmation that financial statements gives true and fair view of assets, liabilities, equity, financial position and results -->
@{
    XBRLviewerMVC.Models.FactModel confirmationThatFinancialStatementGivesTrueAndFairViewOfAssetsLiabilitiesEquityFinancialPositionAndResults = new XBRLviewerMVC.Models.FactModel();
    confirmationThatFinancialStatementGivesTrueAndFairViewOfAssetsLiabilitiesEquityFinancialPositionAndResults = Model.FirstOrDefault(x => x.Id == "ConfirmationThatFinancialStatementGivesTrueAndFairViewOfAssetsLiabilitiesEquityFinancialPositionAndResults");
    <p class="text-left p-1" data-toggle="tooltip" title="Confirmation that financial statements gives true and fair view of assets, liabilities, equity, financial position and results">@confirmationThatFinancialStatementGivesTrueAndFairViewOfAssetsLiabilitiesEquityFinancialPositionAndResults.Value</p>
}

<!-- Management's statement about management's review -->
@{
    XBRLviewerMVC.Models.FactModel managementsStatementAboutManagementsReview = new XBRLviewerMVC.Models.FactModel();
    managementsStatementAboutManagementsReview = Model.FirstOrDefault(x => x.Id == "ManagementsStatementAboutManagementsReview");
    <p class="text-left p-1" data-toggle="tooltip" title="Confirmation that financial statements gives true and fair view of assets, liabilities, equity, financial position and results">@managementsStatementAboutManagementsReview.Value</p>
}

<!-- Recommendation of annual report for approval by general meeting -->
@{
    XBRLviewerMVC.Models.FactModel recommendationForApprovalOfAnnualReportByGeneralMeeting = new XBRLviewerMVC.Models.FactModel();
    recommendationForApprovalOfAnnualReportByGeneralMeeting = Model.FirstOrDefault(x => x.Id == "RecommendationForApprovalOfAnnualReportByGeneralMeeting");
    <p class="text-left p-1" data-toggle="tooltip" title="Recommendation of annual report for approval by general meeting">@recommendationForApprovalOfAnnualReportByGeneralMeeting.Value</p>
}

<!-- Aðalfundardagfesting -->
<!-- Bústaður hjá felagnum sum leggur roknskapin fram, býur -->
@{
    XBRLviewerMVC.Models.FactModel dateOfGeneralMeeting = new XBRLviewerMVC.Models.FactModel();
    dateOfGeneralMeeting = Model.FirstOrDefault(x => x.Id == "DateOfGeneralMeeting");
    XBRLviewerMVC.Models.FactModel addressOfReportingEntityDistrictName = new XBRLviewerMVC.Models.FactModel();
    addressOfReportingEntityDistrictName = Model.FirstOrDefault(x => x.Id == "AddressOfReportingEntityDistrictName");
    <p class="text-left p-1" data-toggle="tooltip" title="Aðalfundardagfesting og bústaður hjá felagnum sum leggur roknskapin fram, býur">@dateOfGeneralMeeting.Value, @addressOfReportingEntityDistrictName.Value</p>
}

<!-- First name and surname of member of executive board -->
<!-- Title of member of executive board -->
@{
    <p class="text-left p-1 font-weight-bold">Stjórn</p>

    XBRLviewerMVC.Models.FactModel nameAndSurnameOfMemberOfExecutiveBoard = new XBRLviewerMVC.Models.FactModel();
    nameAndSurnameOfMemberOfExecutiveBoard = Model.FirstOrDefault(x => x.Id == "NameAndSurnameOfMemberOfExecutiveBoard");
    XBRLviewerMVC.Models.FactModel titleOfMemberOfExecutiveBoard = new XBRLviewerMVC.Models.FactModel();
    titleOfMemberOfExecutiveBoard = Model.FirstOrDefault(x => x.Id == "TitleOfMemberOfExecutiveBoard");

    <p class="text-left p-1" data-toggle="tooltip" title="First name and surname of member of executive board and title of member of executive board">
        @nameAndSurnameOfMemberOfExecutiveBoard.Value<br />
        @titleOfMemberOfExecutiveBoard.Value
    </p>
}

<!-- First name and surname of member of supervisory board -->
<!-- Title of member of supervisory board -->
@{
    <p class="text-left p-1 font-weight-bold">Nevnd</p>

    var memberNames = Model.Where(x => x.Id == "NameAndSurnameOfMemberOfSupervisoryBoard")
        .Select(x => x);

    var memberTitles = Model.Where(x => x.Id == "TitleOfMemberOfSupervisoryBoard")
        .Select(x => x);

    foreach (var mn in memberNames)
    {
        <p class="text-left p-1" data-toggle="tooltip" title="First name and surname of member of supervisory board">@mn.Value</p>

        foreach (var mt in memberTitles)
        {
            if (mn.ContextID == mt.ContextID)
            {
                <p class="text-left p-1" data-toggle="tooltip" title="First name and surname of member of supervisory board">@mt.Value</p>
            }
        }
    }
}
